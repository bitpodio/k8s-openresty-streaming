load_module modules/ngx_http_geoip2_module.so;
load_module modules/ngx_rtmp_module.so;

worker_processes auto;

events {
  worker_connections 1024;
  multi_accept on;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  charset UTF-8;
  charset_types text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml application/json application/vnd.apple.mpegurl;
  keepalive_timeout  65;

  

  # HTTP(S) server
  server {
    listen 80 default_server;
    location /hls {
      
      # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
      # Serve HLS fragments      
      types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
      root /tmp;
      add_header Cache-Control no-cache;
      # CORS setup
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Content-Length';
    }
    location /healthz {
      add_header Content-Type text/plain;
      return 200 "Running..";
    }
    location /dash {
      # Serve DASH fragments
      root /tmp;
      add_header Cache-Control no-cache;
    }
  }

  include telize.conf;
  include conf.d/*.conf;
}

rtmp {
  server {
    listen 1935;
    chunk_size 4000;

    application live {
      # RTMP Streaming
      live on;

      # HLS Streaming
      hls on;
      hls_path /tmp/hls;

      # MPEG-DASH Streaming, similar to HLS
      dash on;
      dash_path /tmp/dash;
    }
  }
}
